# Normal workflow
git checkout master
git pull
# Create a new branch off of master
git checkout -b branch_name
# code code code..
git commit -a
# code code code..
git commit -a
# Combine multiple commits to one
# Use 's' option in rebase UI to combine
git rebase -i
# Now bring in latest from master
git checkout master
git pull
git checkout branch_name
git rebase master

# update branch from master
git checkout master; git pull origin master; git checkout -; git merge master; git rebase master

# show summary of changes, 1 line per change
git log --pretty=oneline
# One line git log without 'less'
git --no-pager log --pretty=oneline --abbrev-commit --author=sdasan
# format output http://git-scm.com/docs/pretty-formats
git log --pretty=format:"[%<(15,trunc)%cr] %s" --author=sdasan

# show original url
git config --get remote.origin.url

# clean up, remove untracked stuff
git clean -xfd
git clean -Xfd

# create a patch
git diff > patchfile
patch -p1 < patchfile

# Create a patch for rollback a commit
git format-patch -1 <sha>
OR
git format-patch -1 HEAD
OR
git format-patch master --stdout > patchfile
THEN
patch -p1 -R < patchfile
OR
git apply -R patchfile

# Change commit message
git commit --amend

# undo a commit
git reset --soft HEAD~1

# Delete a branch
git push origin --delete [Name]
git branch -d [Name]
# List branches, -r for remote
git branch [-r]
# Find branch containing a change sha1, -r for remote
git branch -r --contain <SHA1>

# Show changes only in your branch (which was off of master)
git log master..
git log master.. | egrep ^commit | cut -f2 -d ' '

# Check what's different in a branch
git log --format=oneline --no-merges --author=sdasan --left-right --cherry-pick origin/master...origin/v5.0.0

# Fetch one file from another branch
git show <branch>:<path>

# git fast clone, ignore history, useful for build jobs
git clone --depth 1 <repo>
