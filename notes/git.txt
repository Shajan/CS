# One line git log without 'less'
git --no-pager log --pretty=oneline --abbrev-commit --author=sdasan

#update branch from master
git checkout master; git pull origin master; git checkout -; git merge master; git rebase master

#set branch to a review's rbid
git review set <rbid>

#locally apply patch from review board
go/rb, click download diff to see commitID this change is based on
git checkout -b <new_branch_name> <commitID>
#Apply the patch
rbt patch <reviewid>
OR
cd birdcage
git apply <downloaded diff file from go/rb>

#install rbt breaks 'git review post'
easy_install -U RBTools
#uninstall to fix 'git review post'
pip uninstall rbt
pip uninstall RBTools
pip list

#create a patch
git diff > patchfile
patch -p1 < patchfile

#Crazy git errors
git remote prune origin
git gc --prune=now

#Change commit message
git commit --amend

#undo a commit
git reset --soft HEAD~1

#Delete a branch
git push origin --delete [Name]
git branch -d [Name]

# Normal workflow
git checkout master
git pull
# Create a new branch off of master
git checkout -b branch_name
# code code code..
git commit -a
# code code code..
git commit -a
# Combine multiple commits to one
# Use 's' option in rebase UI to combine
git rebase -i
# Now bring in latest from master
git checkout master
git pull
git checkout branch_name
git rebase master

#Check what's different in a branch
git log --format=oneline --no-merges --author=sdasan --left-right --cherry-pick origin/master...origin/v5.0.0

#Show changes only in your branch (which was off of master)
git log master..

#Debug/trace
env GIT_TRACE=1 GIT_CURL_VERBOSE=1 git ...
